{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "from __future__ import print_function\n",
    "\n",
    "import numpy\n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.interpolate as interpolate\n",
    "import numpy as np\n",
    "import pyshark"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_file(file_name):\n",
    "    path = Path(file_name)\n",
    "    parent = path.parent\n",
    "    base = os.path.splitext(file_name)[0]\n",
    "    cap = pyshark.FileCapture(f'{base}.pcap')    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def stream_to_bytes(cap):\n",
    "    byte_count = 0\n",
    "    arr = []\n",
    "    def new_packet(pkt):\n",
    "        global byte_count\n",
    "        # global byte_count1\n",
    "        byte_count+=int(pkt.length)\n",
    "        # byte_count1+=int(pkt.captured_length)\n",
    "        sniff_time = pkt.sniff_time\n",
    "        arr.append((sniff_time,byte_count))\n",
    "        # print(pkt.length, pkt.captured_length, byte_count, byte_count1)\n",
    "    cap.apply_on_packets(new_packet)\n",
    "    return arr"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "python_defaultSpec_1593785876652",
   "display_name": "Python 3.6.9 64-bit ('venv': venv)"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}